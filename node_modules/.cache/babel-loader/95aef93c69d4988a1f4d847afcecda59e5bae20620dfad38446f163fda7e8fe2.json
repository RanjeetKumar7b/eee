{"ast":null,"code":"var _jsxFileName = \"/Users/ranjeetkumar/Desktop/web d 2023/front_end/src/component/list/List.jsx\";\n// Importing necessary components and styles\nimport React from \"react\";\nimport ListRow from \"./ListRow\";\nimport ListRowCell from \"./ListRowCell\";\nimport ListHeader from \"./ListHeader\";\nimport ListHeaderCell from \"./ListHeaderCell\";\nimport styles from \"./List.module.css\";\n\n// A functional component to render a table-based list\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst List = _ref => {\n  let {\n    rows,\n    searchText,\n    orderDetails,\n    handleOrderDetails,\n    currency\n  } = _ref;\n  // Filter rows based on searchText if provided\n  const filteredRows = searchText === '' ? rows : rows.filter(row => row[\"&id\"] === searchText);\n\n  // Function to handle row click and show order details\n  const handleClick = selectedId => {\n    console.log(\"Row clicked with ID:\", selectedId);\n    handleOrderDetails(selectedId);\n  };\n  return (\n    /*#__PURE__*/\n    // Render the table element with ListHeader and ListRow components\n    _jsxDEV(\"table\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(ListHeader, {\n          children: [/*#__PURE__*/_jsxDEV(ListHeaderCell, {\n            children: \"Order ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(ListHeaderCell, {\n            children: \"Buy/Sell\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(ListHeaderCell, {\n            children: \"Country\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(ListHeaderCell, {\n            children: \"Order Submitted\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(ListHeaderCell, {\n            children: [\"Order Volume / \", `${currency}`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: filteredRows.map(row => /*#__PURE__*/_jsxDEV(ListRow, {\n          onClick: () => handleClick(row[\"&id\"]),\n          children: [/*#__PURE__*/_jsxDEV(ListRowCell, {\n            children: row[\"&id\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListRowCell, {\n            children: row.executionDetails.buySellIndicator\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListRowCell, {\n            children: row.executionDetails.orderStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListRowCell, {\n            children: orderDetails.find(order => order[\"&id\"] === row[\"&id\"]).timestamps.orderSubmitted\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListRowCell, {\n            children: row.bestExecutionData.orderVolume[currency]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)]\n        }, row[\"&id\"], true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }, this)\n  );\n};\n_c = List;\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["React","ListRow","ListRowCell","ListHeader","ListHeaderCell","styles","List","rows","searchText","orderDetails","handleOrderDetails","currency","filteredRows","filter","row","handleClick","selectedId","console","log","container","map","executionDetails","buySellIndicator","orderStatus","find","order","timestamps","orderSubmitted","bestExecutionData","orderVolume"],"sources":["/Users/ranjeetkumar/Desktop/web d 2023/front_end/src/component/list/List.jsx"],"sourcesContent":["// Importing necessary components and styles\nimport React from \"react\";\nimport ListRow from \"./ListRow\";\nimport ListRowCell from \"./ListRowCell\";\nimport ListHeader from \"./ListHeader\";\nimport ListHeaderCell from \"./ListHeaderCell\";\nimport styles from \"./List.module.css\";\n\n// A functional component to render a table-based list\nconst List = ({ rows, searchText, orderDetails, handleOrderDetails, currency }) => {\n  // Filter rows based on searchText if provided\n  const filteredRows = searchText === '' ? rows : rows.filter((row) => row[\"&id\"] === searchText);\n\n  // Function to handle row click and show order details\n  const handleClick = (selectedId) => {\n    console.log(\"Row clicked with ID:\", selectedId);\n    handleOrderDetails(selectedId);\n  };\n  \n  return (\n    // Render the table element with ListHeader and ListRow components\n    <table className={styles.container}>\n      <thead>\n        <ListHeader>\n          <ListHeaderCell>Order ID</ListHeaderCell>\n          <ListHeaderCell>Buy/Sell</ListHeaderCell>\n          <ListHeaderCell>Country</ListHeaderCell>\n          <ListHeaderCell>Order Submitted</ListHeaderCell>\n          <ListHeaderCell>Order Volume / {`${currency}`}</ListHeaderCell>\n        </ListHeader>\n      </thead>\n      <tbody>\n        {/* Map through filtered rows and render ListRow components */}\n        {filteredRows.map((row) => (\n          <ListRow key={row[\"&id\"]} onClick={() => handleClick(row[\"&id\"])}>\n            <ListRowCell>{row[\"&id\"]}</ListRowCell>\n            <ListRowCell>{row.executionDetails.buySellIndicator}</ListRowCell>\n            <ListRowCell>{row.executionDetails.orderStatus}</ListRowCell>\n            {/* Retrieve orderSubmitted value from orderDetails using row ID */}\n            <ListRowCell>{orderDetails.find((order) => order[\"&id\"] === row[\"&id\"]).timestamps.orderSubmitted}</ListRowCell>\n            {/* Display order volume based on the selected currency */}\n            <ListRowCell>{row.bestExecutionData.orderVolume[currency]}</ListRowCell>\n          </ListRow>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default List;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,MAAM,MAAM,mBAAmB;;AAEtC;AAAA;AACA,MAAMC,IAAI,GAAG,QAAsE;EAAA,IAArE;IAAEC,IAAI;IAAEC,UAAU;IAAEC,YAAY;IAAEC,kBAAkB;IAAEC;EAAS,CAAC;EAC5E;EACA,MAAMC,YAAY,GAAGJ,UAAU,KAAK,EAAE,GAAGD,IAAI,GAAGA,IAAI,CAACM,MAAM,CAAEC,GAAG,IAAKA,GAAG,CAAC,KAAK,CAAC,KAAKN,UAAU,CAAC;;EAE/F;EACA,MAAMO,WAAW,GAAIC,UAAU,IAAK;IAClCC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEF,UAAU,CAAC;IAC/CN,kBAAkB,CAACM,UAAU,CAAC;EAChC,CAAC;EAED;IAAA;IACE;IACA;MAAO,SAAS,EAAEX,MAAM,CAACc,SAAU;MAAA,wBACjC;QAAA,uBACE,QAAC,UAAU;UAAA,wBACT,QAAC,cAAc;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAA0B,eACzC,QAAC,cAAc;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAA0B,eACzC,QAAC,cAAc;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAyB,eACxC,QAAC,cAAc;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAiC,eAChD,QAAC,cAAc;YAAA,8BAAkB,GAAER,QAAS,EAAC;UAAA;YAAA;YAAA;YAAA;UAAA,QAAkB;QAAA;UAAA;UAAA;UAAA;QAAA;MACpD;QAAA;QAAA;QAAA;MAAA,QACP,eACR;QAAA,UAEGC,YAAY,CAACQ,GAAG,CAAEN,GAAG,iBACpB,QAAC,OAAO;UAAkB,OAAO,EAAE,MAAMC,WAAW,CAACD,GAAG,CAAC,KAAK,CAAC,CAAE;UAAA,wBAC/D,QAAC,WAAW;YAAA,UAAEA,GAAG,CAAC,KAAK;UAAC;YAAA;YAAA;YAAA;UAAA,QAAe,eACvC,QAAC,WAAW;YAAA,UAAEA,GAAG,CAACO,gBAAgB,CAACC;UAAgB;YAAA;YAAA;YAAA;UAAA,QAAe,eAClE,QAAC,WAAW;YAAA,UAAER,GAAG,CAACO,gBAAgB,CAACE;UAAW;YAAA;YAAA;YAAA;UAAA,QAAe,eAE7D,QAAC,WAAW;YAAA,UAAEd,YAAY,CAACe,IAAI,CAAEC,KAAK,IAAKA,KAAK,CAAC,KAAK,CAAC,KAAKX,GAAG,CAAC,KAAK,CAAC,CAAC,CAACY,UAAU,CAACC;UAAc;YAAA;YAAA;YAAA;UAAA,QAAe,eAEhH,QAAC,WAAW;YAAA,UAAEb,GAAG,CAACc,iBAAiB,CAACC,WAAW,CAAClB,QAAQ;UAAC;YAAA;YAAA;YAAA;UAAA,QAAe;QAAA,GAP5DG,GAAG,CAAC,KAAK,CAAC;UAAA;UAAA;UAAA;QAAA,QASzB;MAAC;QAAA;QAAA;QAAA;MAAA,QACI;IAAA;MAAA;MAAA;MAAA;IAAA;EACF;AAEZ,CAAC;AAAC,KAtCIR,IAAI;AAwCV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}